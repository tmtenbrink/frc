name: CI
on:
  push:
    branches: [ main ]
  pull_request:
  release:
    types: [ published ]

jobs:
  buildtest:
    name: Build-Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
          py-version: ['3.7', '3.8', '3.9']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py-version }}
      - name: Load cached Poetry installation
        uses: actions/cache@v2
        with:
          path: ~/.local 
          key: poetry-0 
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-pip-wheels
        uses: actions/cache@v2
        with:
          path: ~/.cache
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      - name: Install library
        run: poetry install --no-interaction
      - name: Pytest
        run: |
          source $VENV
          pytest
      - name: Build
        run: poetry build
      - name: Upload artifact
        if: ${{ matrix.py-version == '3.9' }}
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ${{ github.workspace }}/dist/
          if-no-files-found: error
  publish:
    needs: [buildtest]
    name: Wheel-Publish
    runs-on: ubuntu-latest
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: dist
        path: ${{ github.workspace }}/dist/
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install wheel test
      run: |
        pip install ${{ github.workspace }}/dist/*.whl
    - name: Publish a Python distribution to PyPI
      if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
